#include <stdio.h>
#include <stdlib.h>

int main() {
    int **A, **B, **C;
    int i, j, k;
    int m, n, p, q;

    printf("enter the number of rows and columns for matrix A");
    scanf("%d %d", &m, &n);
    printf("enter the number of rows and columns for matrix B");
    scanf("%d %d", &p, &q);
    A = (int**)malloc(m * sizeof(int*));
    B = (int**)malloc(p * sizeof(int*));
    C = (int**)malloc(m * sizeof(int*));
    for (i=0;i<m;i++) {
        A[i]=(int*)malloc(n * sizeof(int));
    }
    for (i=0;i<p;i++)
    {
        B[i] =(int*)malloc(q * sizeof(int));
    }
    for (i =0; i< m;i++) {
        C[i] = (int*)malloc(q * sizeof(int));
    }

    printf("enter the elements of matrix A (%dx%d)\n", m, n);
    for (i = 0; i < m; i++) {
        for (j = 0; j < n; j++) {
            printf("A[%d][%d]: ", i + 1, j + 1);
            scanf("%d", &A[i][j]);
        }
    }

    printf("enter the elements of matrix B (%dx%d)\n", p, q);
    for (i = 0; i < p; i++) {
        for (j = 0; j < q; j++) {
            printf("B[%d][%d]: ", i + 1, j + 1);
            scanf("%d", &B[i][j]);
        }
    }

    for (i = 0; i < m; i++) {
        for (j = 0; j < q; j++) {
            C[i][j] = 0;
        }
    }

    for (i = 0; i < m; i++) {
        for (j = 0; j < q; j++) {
            for (k = 0; k < n; k++) {
                C[i][j] += A[i][k] * B[k][j];
            }
        }
    }

    printf("\n multiplication (A * B = C):\n");
    for (i = 0; i < m; i++) {
        for (j = 0; j < q; j++) {
            printf("%d ", C[i][j]);
        }
        printf("\n");
    }

    for (i = 0; i < m; i++) {
        free(A[i]);
    }
    for (i = 0; i < p; i++) {
        free(B[i]);
    }
    for (i = 0; i < m; i++) {
        free(C[i]);
    }
    free(A);
    free(B);
    free(C);

    
}
